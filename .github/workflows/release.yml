name: CI Create Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
      
    branches: [ "main" ]

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Include amd64 and arm on all platforms.
        goos: [windows, linux]
        goarch: [amd64, arm64, 386]
      fail-fast: false
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
#      - name: Set binary name
#        run: |
#          if [[ "$GOOS" == "windows" ]]; then
#            BINARY=curlor-${{ github.ref_name }}-$GOOS-$GOARCH.exe
#          else
#            BINARY=curlor-${{ github.ref_name }}-$GOOS-$GOARCH
#          fi
#          export BINARY=$(echo "$BINARY" | sed 's/\//-/g')

      - name: Show workflow information
        run: |
          echo "GOOS: $GOOS, GOARCH: $GOARCH"
          echo "BUILD_TIME=$(date +%FT%T%z)" >> $GITHUB_ENV

      - name: Build binaries
        run: |
          $BINARY=curlor-${{ github.ref_name }}-$GOOS-$GOARCH
          $BINARY=$(echo "$BINARY" | sed 's/\//-/g')
          if [[ "$GOOS" == "windows" ]]; then
            $BINARY=$BINARY.exe
          fi
          GOOS=$GOOS GOARCH=$GOARCH go build -o dist/$BINARY .
          ls -l dist
